name: main

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

permissions:
  checks: write
  contents: write
  pull-requests: read
  packages: read

jobs:
  linter:
    name: run eslint
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: latest
      - name: Install Node.js dependencies
        run: npm install --include=dev
      - name: Run linter with report
        run: npm run lint
        continue-on-error: true
      - name: Save linting report
        run: npx eslint --output-file eslint_report.json --format json .
        continue-on-error: true
      - name: Annotate Code Linting Results
        uses: ataylorme/eslint-annotate-action@v3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          report-json: "eslint_report.json"
  tests-and-coverage:
    name: run tests an coverage report
    runs-on: ubuntu-latest
    env:
      NODE_ENV: development
      BUHOI_REDIS: redis://localhost:6379
      BUHOI_MQ: amqp://guest:guest@localhost:5672
    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
      rabbitmq:
        image: rabbitmq
        env:
          RABBITMQ_DEFAULT_USER: guest
          RABBITMQ_DEFAULT_PASS: guest
        ports:
          - 5672:5672
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
#        with:
#          ref: ${{ github.event.pull_request.head.sha }}
#          fetch-depth: 1000 # Set this according to the size of your git history
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: latest
      - name: Install Node.js dependencies
        run: npm install --include=dev
      - name: Install Mocha reporter
        run: npm install mocha-ctrf-json-reporter
      - name: Run tests with reporter
        run: npx mocha -r should --reporter mocha-ctrf-json-reporter --require tests/mocha-hooks.js --recursive tests
        continue-on-error: true
      - name: Add annotations
        run: npx github-actions-ctrf ctrf-report.json
        working-directory: ctrf
#      - name: Fetch base
#        run: git fetch origin ${{ github.event.pull_request.base.ref }} --depth=1000
#      - name: Run NYC
#        run: npm run cover
#        continue-on-error: true
#      - name: Generate NYC report
#        run: npx nyc report --reporter json-summary --report-dir nyc-coverage-report --exclude-after-remap false
#      - name: Report NYC coverage
#        uses: sidx1024/report-nyc-coverage-github-action@v1.2.7
#        with:
#          coverage_file: "nyc-coverage-report/coverage-summary.json"
#          comment_template_file: ".github/nyc-coverage-report/comment-template.md"
#          base_coverage_file: ""
